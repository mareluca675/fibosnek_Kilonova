#include <fstream>
#include <vector>
#include <cmath>

using namespace std;

ifstream cin("fibosnek.in");
ofstream cout("fibosnek.out");

vector<unsigned int> fib = { 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465,
14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073 };

char indice(unsigned long long x) {
    if (x == 1) return char(1);

    int mij, st = 1, dr = 46;

    while (st + 1 != dr) {
        mij = (st + dr) / 2;

        if (x == fib[mij]) {
            return mij;
        }
        else if (x < fib[mij]) {
            dr = mij;
        }
        else {
            st = mij;
        }
    }

    if (x - fib[st] == fib[dr] - x) {
        return st * -1;
    }

    return x - fib[st] > fib[dr] - x ? dr * -1 : st * -1;   
}

int c, n, m, fibo;
unsigned long long x;

char a[2250000];
unsigned long long smax, s1, s2, s3, lmaxi, l1, l2, l3;

int main()
{   
    cin >> c >> n >> m;

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> x;

            indice(x) >= 0 ? ++ fibo : fibo;
            a[i + j * n] = indice(x);
        }
    }
    
    if (c == 1) {
        cout << fibo;
    }
    else {
        for (int i = 0; i < n * m; ++i) {
            if (a[i] >= 0) {
                if (l2 == 0) {
                    s1 += fib[a[i]];
                    l1++;
                }
                else {
                    s3 += fib[a[i]];
                    l3++;
                }
            }
            else
            {
                if (l3 == 0) {
                    s2 += fib[abs(a[i])];
                    l2++;
                }
                else {
                    if (l1 + l2 + l3 > lmaxi) {
                        lmaxi = l1 + l2 + l3;
                        smax = s1 + s2 + s3;
                    }
                    
                    l1 = l3;
                    l2 = 1;
                    l3 = 0;
        
                    s1 = s3;
                    s2 = fib[-a[i]];
                    s3 = 0;
                }
            }
        }

        if (l1 + l2 + l3 > lmaxi) {
            lmaxi = l1 + l2 + l3;
            smax = s1 + s2 + s3;
        }

        cout << smax;
    }
}
